@using Connect.Koi;

<link rel="stylesheet" href="@App.Path/dist/lib/blueimp/css/blueimp-gallery.min.css" data-enableoptimizations="true" />
@* We're using the blueimp jQuery version here because many lines of initialization code can be saved compared to the non-jQuery version *@
<script type="text/javascript" src="@App.Path/dist/lib/blueimp/js/jquery.blueimp-gallery.min.js" data-enableoptimizations="true"></script>
<link rel="stylesheet" href="@App.Path/dist/@(Koi.PickCss("bs3,bs4", "bs3")).css" data-enableoptimizations="true" />
<script src="@App.Path/dist/script.js" data-enableoptimizations="true" ></script>

@if (!String.IsNullOrEmpty(Request.QueryString["album"]))
{
    <style>
        .ly-col-leftpane { display: none; }
    </style>
}

@{
    var album = Content;
    var pageHandler = HttpContext.Current.Handler as Page;
    var tp = (DotNetNuke.Framework.CDefault)pageHandler; 

    // optionally filter by album param
    // todo: move this to a visual query
    if (!String.IsNullOrEmpty(Request.QueryString["Album"]))
    {
        album = AsDynamic(Data["Default"]).FirstOrDefault(a => a.Path == Request.QueryString["Album"]);
        
        if (album == null)
        {
            Response.StatusCode = 404;
            Response.TrySkipIisCustomErrors = true;
            <h1>@App.Resources.AlbumNotFound</h1>
            <div>
                @Html.Raw(App.Resources.AlbumNotFoundText)
            </div>
        }
        else 
        {
            // Set meta-title
            var pageObj = Context.CurrentHandler as Page;
            pageObj.Title = album.Title + " | " + pageObj.Title;
        }
    }
    
    //pageHandler
    if (pageHandler != null && tp != null)
    {
    
        if (!String.IsNullOrEmpty(album.Title))
        {
            pageHandler.Title = album.Title + " | " + Dnn.Module.ParentTab.TabName + " | " + Dnn.Portal.PortalName;
        }
    }

    if (album != null)
    {
    
        var albSettings = album.Presentation;

        IEnumerable<ToSic.SexyContent.Adam.AdamFile> images = AsAdam(album, "Images").Files;

        // Handle sorting 
        switch ((string)albSettings.SortMode)
        {
            case "File asc":
                images = images.OrderBy(c => c.FileName);
                break;
            case "File desc":
                images = images.OrderByDescending(c => c.FileName);
                break;
            case "Title asc":
                images = images.OrderBy(c => !c.HasMetadata).ThenBy(c => !c.HasMetadata ? "" : ((dynamic)c.Metadata).Title);
                break;
            case "Title desc":
                images = images.OrderBy(c => !c.HasMetadata).ThenByDescending(c => !c.HasMetadata ? "" : ((dynamic)c.Metadata).Title);
                break;
            case "Upload asc":
                @* If you use a 2sxc older than 9.2, use c.LastModificationTime instead of c.Modified *@
                images = images.OrderBy(c => c.Modified);
                break;
            case "Upload desc":
                @* If you use a 2sxc older than 9.2, use c.LastModificationTime instead of c.Modified *@
                images = images.OrderByDescending(c => c.Modified);
                break;
        }


        <div class="sc-element">
            @Edit.Toolbar(album)
            @if (albSettings.HeadingType != "hidden")
            {
                @Html.Raw("<" + albSettings.HeadingType + ">")
                @album.Title
                @Html.Raw("</" + albSettings.HeadingType + ">")
            }
			else if(Permissions.UserMayEditContent)
			{
			   <h2>(@App.Resources.TitleNotDisplayed)</h2>
			}
            @Html.Raw(album.Introduction)
        </div>

       <div class="ga-wrapper row auto-clear">
        @foreach (var pic in images)
            {
            <div @Koi.Class("all='ga-tiles' bs3='col-xs-6 col-sm-4 col-md-3 col-lg-3' bs4,oth='col-6 col-sm-6 col-md-4 col-lg-3'")>
                <div class="ga-image sc-element">

                    @* The following code block will either offer to edit existing metadata,
                        or create an "add-metadata" toolbar prefilled with this files ID *@
                    @if (Permissions.UserMayEditContent)
                    {
                        <ul class="sc-menu" data-toolbar='{ "action": "metadata", "entityId": @pic.Metadata.EntityId,
                        "contentType":"ImageMetadata", "metadata":{"key":"file:@pic.FileId"}}'></ul>
                    }
                    <a href="@pic.Url?w=@App.Settings.LightboxImageWidth&h=@App.Settings.LightboxImageHeight&mode=max" title="@(((dynamic)pic.Metadata).Title)" data-gallery="#blueimp-gallery-@Dnn.Module.ModuleID-@album.path">
                        <span class="ga-img">
                        <span class="overlay"></span>
                        <img @Koi.Class("bs3='img-responsive' bs4,oth='img-fluid'") src="@pic.Url?w=@App.Settings.ImageThumbnailWidth&h=@App.Settings.ImageThumbnailHeight&mode=crop&scale=both&quality=80" alt="@(((dynamic)pic.Metadata).Title)" />
                        </span>
                        @if (albSettings.ShowImageTitle && pic.HasMetadata)
                        {
                            <span class="ga-title">@(((dynamic)pic.Metadata).Title)</span>
                        }
                    </a>

                </div>
            </div>
            }
        </div>

        <script type="text/javascript">
            $(function () {
                // Make sure the app works with ajax preview - remove old (previous) lightbox
                $("#blueimp-gallery-@Dnn.Module.ModuleID-@album.path").remove();
        
                // Because we can't add the HTML for blueimp gallery directly to the body element, we add it with JS
                $("body").append("<!-- The Gallery as lightbox dialog, should be a child element of the document body -->" +
                    "<div id='blueimp-gallery-@Dnn.Module.ModuleID-@album.path' class='blueimp-gallery blueimp-gallery-controls blueimp-gallery-2sxc' data-continuous='false'>" +
                    "<div class='slides'></div>" +
                    "<h3 class='title'></h3>" +
                    "<a class='prev'>‹</a>" +
                    "<a class='next'>›</a>" +
                    "<a class='close'>×</a>" +
                    "<a class='play-pause'></a>" +
                    "<ol class='indicator'></ol>" +
                    "</div>");
        
                // initialize the carousel gallery
                /* blueimp.Gallery($('[data-gallery="#blueimp-gallery-@Dnn.Module.ModuleID"]'), {
                    container: '#blueimp-gallery-@Dnn.Module.ModuleID',
                    carousel: false
                });
                */
                
            });
        </script>
    }


    // show back button if an album specified
    if(!String.IsNullOrEmpty(Request.QueryString["Album"]))
    {
        <a href="@Dnn.Tab.FullUrl" @Koi.Class("all='btn' bs3='btn-primary btn-sm' bs4,oth='btn-outline-primary btn-sm'")>@App.Resources.BackToOverview</a>
    }
}
